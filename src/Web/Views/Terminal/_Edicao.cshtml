@using Raizen.Framework.Models
@using Raizen.Framework.Web.MVC.Extensions
@using Raizen.Framework.Web.MVC.Models
@using Raizen.Framework.Utils.Extensions
@using Raizen.Framework.Web.MVC.Extensions;
@using Raizen.UniCad.Model;

@model Raizen.UniCad.Web.Models.ModelTerminal
@{
    var urlValidacao = @Url.Action("ValidarObjetos", "Terminal");

    var mensagemOperacao = Html.Raw((Model.Resultado == null || string.IsNullOrEmpty(Model.Resultado.Mensagem) ? @"""""" : @"""" + Model.Resultado.Mensagem + @""""));
    var dadosValidacoes = Html.Raw((Model.ValidacoesModelo.IsNullOrEmpty() ? @"""""" : Json.Encode(Model.ValidacoesModelo)));
    var contemErros = Html.Raw((string.IsNullOrEmpty(Model.ContemErrosModel) ? @"""N""" : @"""" + Model.ContemErrosModel + @""""));

}
<script type="text/javascript" src="@Url.ResolverUrlComVersao("~/Content/js/Raizen/UniCad/Raizen.UniCad.Mensagens.js")"></script>
<script type="text/javascript" src="@Url.ResolverUrlComVersao("~/Content/js/Raizen/UniCad/Raizen.UniCad.Terminal.js")"></script>

<script type="text/javascript">
    $(document).ready(function () {

        raizenCoreJs.raizenCRUD.urlSalvar = '@Url.Action("Salvar", "Terminal")';

        raizenCoreJs.raizenMensagens.MensagemOperacao = @mensagemOperacao;
        raizenCoreJs.raizenMensagens.ContemErros = @contemErros;
        raizenCoreJs.raizenMensagens.ValidacoesModel = @dadosValidacoes;
        raizenCoreJs.raizenMensagens.ExibirMensagemOperacao();
        raizenCoreJs.raizenHelpers.urlValidacao = "@urlValidacao";

        RaizenCoreJs.prototype.Terminal.urlAdicionarCliente = '@Url.Action("AdicionarCliente", "Terminal")';

    });

</script>

<div class="box border raizen" onkeypress="return raizenCoreJs.raizenHelpers.EnterSalvar(event);" id="containerEdicao">
    <div class="box-title">
        <h4><i class="fa fa-columns"></i><span class="hidden-inline-mobile">Edição de Terminal</span></h4>
    </div>
    <div class="box-body">
        <div class="row">
            <div class="col-md-12">
                <form id="frmEdicao" class="form-horizontal">
                    @Html.HiddenFor(model => model.Operacao, new { @Id = "IdOperacaoCRUDEdit" })
                    @Html.HiddenFor(model => model.ChavePrimaria)
                    <div class="row">
                        @Html.BootstrapTextBoxFor(model => model.Terminal.Nome, null, "Nome", new { maxlength = 200 }, new HtmlHelperOption() { colunas = "col-md-3" })
                        @Html.BootstrapTextBoxFor(model => model.Terminal.Sigla, null, "Sigla", new { maxlength = 200 }, new HtmlHelperOption() { colunas = "col-md-3" })
                        @Html.BootstrapTextBoxFor(model => model.Terminal.Endereco, null, "Endereço", new { maxlength = 200 }, new HtmlHelperOption() { colunas = "col-md-6" })
                    </div>
                    <div class="row">
                        @Html.BootstrapTextBoxFor(model => model.Terminal.Cidade, null, "Cidade", new { maxlength = 200 }, new HtmlHelperOption() { colunas = "col-md-6" })
                        @Html.BootstrapDropDownListFor(model => model.Terminal.IDEstado, new SelectList(GenericDelegate.Listar<Estado>(), "ID", "Nome"), "Estado", new { onclick = "raizenCoreJs.AgendamentoChecklist.empresaOperacaoTerminalChange()" }, new HtmlHelperOption() { colunas = "col-md-3" })
                        @Html.BootstrapDropDownListFor(model => model.Terminal.isPool, new SelectList(GenericDelegate.VerdadeiroOuFalso(), "Flag", "Nome"), "Pool", new { onclick = "raizenCoreJs.Terminal.PoolChange()" }, new HtmlHelperOption() { colunas = "col-md-3", mostraTextoVazio=false })
                    </div>
                    @{
                        var exibir = "display:none";
                        if (Model.Terminal != null && Model.Terminal.isPool)
                        {
                            exibir = "";
                        }
                    }
                    <div id="linhaCliente" style="@exibir" class="col-md-12">

                        @using (Html.BootstrapCollapsiblePanel("Inclusão de Empresa Congênere", "clientesPanel", false, "fa fa-user-circle", null, new { style = "max-height:300px; overflow-x:hidden; overflow-y:auto; margin-top:10px; " }))
                        {
                            <div class="row">
                                @Html.BootstrapTextBox("Cliente", null,"Empresa", new { maxlength = 100}, new HtmlHelperOption { colunas = "col-md-9" })
                                @Html.BootstrapButtonAdd("BtnIncluir", "Incluir", ButtonType.BUTTON, "raizenCoreJs.Terminal.adicionarCliente();", "style='margin-top: 25px;'")
                            </div>
                                <table id="clientesTable" cellpadding="0" cellspacing="0" border="0" class="datatable table table-striped table-bordered table-hover">
                                    <thead>
                                        <tr class="table-raizen">
                                            <th>Empresa Congênere</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr id="linha-2" class="gradeX">
                                            @if (Model.Terminal != null && Model.Terminal.TerminalEmpresa != null && Model.Terminal.TerminalEmpresa.Any())
                                            {
                                                foreach (var item in Model.Terminal.TerminalEmpresa)
                                                {
                                                    Html.RenderPartial("_ItemCliente", item);
                                                }
                                            }
                                        </tr>
                                    </tbody>
                                </table>
                        }
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>