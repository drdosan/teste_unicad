//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Este código-fonte foi gerado automaticamente por Microsoft.VSDesigner, Versão 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Raizen.UniCad.SAL.WsEasyquery {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="wsEasyQueryACSSoap", Namespace="http://easyquerywebservice.cosan.com.br/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NHEntity))]
    public partial class wsEasyQueryACS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private Authenticator authenticatorValueField;
        
        private System.Threading.SendOrPostCallback CancelTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadTicketsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTicketCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTicketByUnicadOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTicketAttachWithNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTicketWithNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTicketAttachOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTicketAttachWithMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTicketPricingZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTicketPricingZoneWithNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateClientContactInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateClientNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTicketReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTicketByCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTicketByNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTicketStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseTicketByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSmsInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetSmsInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTicketsSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListOpenAppTicketsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateChatRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListChatOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListarTopTenRecentesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListarConsultaAppOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListarConsultaAppCondicionalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CsfacilSendChatMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback CsfacilListChatMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback CsfacilCountChatMessageOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public wsEasyQueryACS() {
            this.Url = global::Raizen.UniCad.SAL.Properties.Settings.Default.Raizen_UniCad_SAL_WsEasyquery_wsEasyQueryACS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public Authenticator AuthenticatorValue {
            get {
                return this.authenticatorValueField;
            }
            set {
                this.authenticatorValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CancelTicketCompletedEventHandler CancelTicketCompleted;
        
        /// <remarks/>
        public event DownloadTicketsCompletedEventHandler DownloadTicketsCompleted;
        
        /// <remarks/>
        public event CreateTicketCompletedEventHandler CreateTicketCompleted;
        
        /// <remarks/>
        public event CreateTicketCompleteCompletedEventHandler CreateTicketCompleteCompleted;
        
        /// <remarks/>
        public event CreateTicketByUnicadCompletedEventHandler CreateTicketByUnicadCompleted;
        
        /// <remarks/>
        public event CreateTicketAttachWithNotesCompletedEventHandler CreateTicketAttachWithNotesCompleted;
        
        /// <remarks/>
        public event CreateTicketWithNotesCompletedEventHandler CreateTicketWithNotesCompleted;
        
        /// <remarks/>
        public event CreateTicketAttachCompletedEventHandler CreateTicketAttachCompleted;
        
        /// <remarks/>
        public event CreateTicketAttachWithMessageCompletedEventHandler CreateTicketAttachWithMessageCompleted;
        
        /// <remarks/>
        public event CreateTicketPricingZoneCompletedEventHandler CreateTicketPricingZoneCompleted;
        
        /// <remarks/>
        public event CreateTicketPricingZoneWithNotesCompletedEventHandler CreateTicketPricingZoneWithNotesCompleted;
        
        /// <remarks/>
        public event UpdateClientContactInformationCompletedEventHandler UpdateClientContactInformationCompleted;
        
        /// <remarks/>
        public event UpdateClientNoteCompletedEventHandler UpdateClientNoteCompleted;
        
        /// <remarks/>
        public event GetTicketReportCompletedEventHandler GetTicketReportCompleted;
        
        /// <remarks/>
        public event GetTicketByCustomerCompletedEventHandler GetTicketByCustomerCompleted;
        
        /// <remarks/>
        public event GetTicketByNumberCompletedEventHandler GetTicketByNumberCompleted;
        
        /// <remarks/>
        public event GetCustomerContactCompletedEventHandler GetCustomerContactCompleted;
        
        /// <remarks/>
        public event GetTicketStatusCompletedEventHandler GetTicketStatusCompleted;
        
        /// <remarks/>
        public event CloseTicketCompletedEventHandler CloseTicketCompleted;
        
        /// <remarks/>
        public event CloseTicketByUserCompletedEventHandler CloseTicketByUserCompleted;
        
        /// <remarks/>
        public event GetSmsInformationCompletedEventHandler GetSmsInformationCompleted;
        
        /// <remarks/>
        public event SetSmsInformationCompletedEventHandler SetSmsInformationCompleted;
        
        /// <remarks/>
        public event GetTicketsSummaryCompletedEventHandler GetTicketsSummaryCompleted;
        
        /// <remarks/>
        public event ListOpenAppTicketsCompletedEventHandler ListOpenAppTicketsCompleted;
        
        /// <remarks/>
        public event CreateChatRequestCompletedEventHandler CreateChatRequestCompleted;
        
        /// <remarks/>
        public event ListChatCompletedEventHandler ListChatCompleted;
        
        /// <remarks/>
        public event ListarTopTenRecentesCompletedEventHandler ListarTopTenRecentesCompleted;
        
        /// <remarks/>
        public event ListarConsultaAppCompletedEventHandler ListarConsultaAppCompleted;
        
        /// <remarks/>
        public event ListarConsultaAppCondicionalCompletedEventHandler ListarConsultaAppCondicionalCompleted;
        
        /// <remarks/>
        public event CsfacilSendChatMessageCompletedEventHandler CsfacilSendChatMessageCompleted;
        
        /// <remarks/>
        public event CsfacilListChatMessageCompletedEventHandler CsfacilListChatMessageCompleted;
        
        /// <remarks/>
        public event CsfacilCountChatMessageCompletedEventHandler CsfacilCountChatMessageCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/CancelTicket", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CancelTicket(string TicketNumber) {
            object[] results = this.Invoke("CancelTicket", new object[] {
                        TicketNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelTicketAsync(string TicketNumber) {
            this.CancelTicketAsync(TicketNumber, null);
        }
        
        /// <remarks/>
        public void CancelTicketAsync(string TicketNumber, object userState) {
            if ((this.CancelTicketOperationCompleted == null)) {
                this.CancelTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelTicketOperationCompleted);
            }
            this.InvokeAsync("CancelTicket", new object[] {
                        TicketNumber}, this.CancelTicketOperationCompleted, userState);
        }
        
        private void OnCancelTicketOperationCompleted(object arg) {
            if ((this.CancelTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelTicketCompleted(this, new CancelTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/DownloadTickets", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DownloadTickets(string CustomerCode, int Days) {
            object[] results = this.Invoke("DownloadTickets", new object[] {
                        CustomerCode,
                        Days});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadTicketsAsync(string CustomerCode, int Days) {
            this.DownloadTicketsAsync(CustomerCode, Days, null);
        }
        
        /// <remarks/>
        public void DownloadTicketsAsync(string CustomerCode, int Days, object userState) {
            if ((this.DownloadTicketsOperationCompleted == null)) {
                this.DownloadTicketsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadTicketsOperationCompleted);
            }
            this.InvokeAsync("DownloadTickets", new object[] {
                        CustomerCode,
                        Days}, this.DownloadTicketsOperationCompleted, userState);
        }
        
        private void OnDownloadTicketsOperationCompleted(object arg) {
            if ((this.DownloadTicketsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadTicketsCompleted(this, new DownloadTicketsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/CreateTicket", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateTicket(int SubcategoryID, string CustomerCode, string Description, string ResolutionGroupID, string ContactName, string ContactEmail, string ContactPhone) {
            object[] results = this.Invoke("CreateTicket", new object[] {
                        SubcategoryID,
                        CustomerCode,
                        Description,
                        ResolutionGroupID,
                        ContactName,
                        ContactEmail,
                        ContactPhone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTicketAsync(int SubcategoryID, string CustomerCode, string Description, string ResolutionGroupID, string ContactName, string ContactEmail, string ContactPhone) {
            this.CreateTicketAsync(SubcategoryID, CustomerCode, Description, ResolutionGroupID, ContactName, ContactEmail, ContactPhone, null);
        }
        
        /// <remarks/>
        public void CreateTicketAsync(int SubcategoryID, string CustomerCode, string Description, string ResolutionGroupID, string ContactName, string ContactEmail, string ContactPhone, object userState) {
            if ((this.CreateTicketOperationCompleted == null)) {
                this.CreateTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTicketOperationCompleted);
            }
            this.InvokeAsync("CreateTicket", new object[] {
                        SubcategoryID,
                        CustomerCode,
                        Description,
                        ResolutionGroupID,
                        ContactName,
                        ContactEmail,
                        ContactPhone}, this.CreateTicketOperationCompleted, userState);
        }
        
        private void OnCreateTicketOperationCompleted(object arg) {
            if ((this.CreateTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTicketCompleted(this, new CreateTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/CreateTicketComplete", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateTicketComplete(int SubcategoryID, string CustomerCode, string Description, string ResolutionGroupID, string ContactName, string ContactEmail, string ContactPhone, bool FromApp, string uuid) {
            object[] results = this.Invoke("CreateTicketComplete", new object[] {
                        SubcategoryID,
                        CustomerCode,
                        Description,
                        ResolutionGroupID,
                        ContactName,
                        ContactEmail,
                        ContactPhone,
                        FromApp,
                        uuid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTicketCompleteAsync(int SubcategoryID, string CustomerCode, string Description, string ResolutionGroupID, string ContactName, string ContactEmail, string ContactPhone, bool FromApp, string uuid) {
            this.CreateTicketCompleteAsync(SubcategoryID, CustomerCode, Description, ResolutionGroupID, ContactName, ContactEmail, ContactPhone, FromApp, uuid, null);
        }
        
        /// <remarks/>
        public void CreateTicketCompleteAsync(int SubcategoryID, string CustomerCode, string Description, string ResolutionGroupID, string ContactName, string ContactEmail, string ContactPhone, bool FromApp, string uuid, object userState) {
            if ((this.CreateTicketCompleteOperationCompleted == null)) {
                this.CreateTicketCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTicketCompleteOperationCompleted);
            }
            this.InvokeAsync("CreateTicketComplete", new object[] {
                        SubcategoryID,
                        CustomerCode,
                        Description,
                        ResolutionGroupID,
                        ContactName,
                        ContactEmail,
                        ContactPhone,
                        FromApp,
                        uuid}, this.CreateTicketCompleteOperationCompleted, userState);
        }
        
        private void OnCreateTicketCompleteOperationCompleted(object arg) {
            if ((this.CreateTicketCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTicketCompleteCompleted(this, new CreateTicketCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/CreateTicketByUnicad", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateTicketByUnicad(int SubcategoryID, int ResolutionGroupID, string Description, string Subject, string Email, bool NotifyClient) {
            object[] results = this.Invoke("CreateTicketByUnicad", new object[] {
                        SubcategoryID,
                        ResolutionGroupID,
                        Description,
                        Subject,
                        Email,
                        NotifyClient});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTicketByUnicadAsync(int SubcategoryID, int ResolutionGroupID, string Description, string Subject, string Email, bool NotifyClient) {
            this.CreateTicketByUnicadAsync(SubcategoryID, ResolutionGroupID, Description, Subject, Email, NotifyClient, null);
        }
        
        /// <remarks/>
        public void CreateTicketByUnicadAsync(int SubcategoryID, int ResolutionGroupID, string Description, string Subject, string Email, bool NotifyClient, object userState) {
            if ((this.CreateTicketByUnicadOperationCompleted == null)) {
                this.CreateTicketByUnicadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTicketByUnicadOperationCompleted);
            }
            this.InvokeAsync("CreateTicketByUnicad", new object[] {
                        SubcategoryID,
                        ResolutionGroupID,
                        Description,
                        Subject,
                        Email,
                        NotifyClient}, this.CreateTicketByUnicadOperationCompleted, userState);
        }
        
        private void OnCreateTicketByUnicadOperationCompleted(object arg) {
            if ((this.CreateTicketByUnicadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTicketByUnicadCompleted(this, new CreateTicketByUnicadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/CreateTicketAttachWithNotes", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateTicketAttachWithNotes(int SubcategoryID, string CustomerCode, string Description, string ResolutionGroupID, string ContactName, string ContactEmail, string ContactPhone, string Notes, CallFile AttachFile) {
            object[] results = this.Invoke("CreateTicketAttachWithNotes", new object[] {
                        SubcategoryID,
                        CustomerCode,
                        Description,
                        ResolutionGroupID,
                        ContactName,
                        ContactEmail,
                        ContactPhone,
                        Notes,
                        AttachFile});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTicketAttachWithNotesAsync(int SubcategoryID, string CustomerCode, string Description, string ResolutionGroupID, string ContactName, string ContactEmail, string ContactPhone, string Notes, CallFile AttachFile) {
            this.CreateTicketAttachWithNotesAsync(SubcategoryID, CustomerCode, Description, ResolutionGroupID, ContactName, ContactEmail, ContactPhone, Notes, AttachFile, null);
        }
        
        /// <remarks/>
        public void CreateTicketAttachWithNotesAsync(int SubcategoryID, string CustomerCode, string Description, string ResolutionGroupID, string ContactName, string ContactEmail, string ContactPhone, string Notes, CallFile AttachFile, object userState) {
            if ((this.CreateTicketAttachWithNotesOperationCompleted == null)) {
                this.CreateTicketAttachWithNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTicketAttachWithNotesOperationCompleted);
            }
            this.InvokeAsync("CreateTicketAttachWithNotes", new object[] {
                        SubcategoryID,
                        CustomerCode,
                        Description,
                        ResolutionGroupID,
                        ContactName,
                        ContactEmail,
                        ContactPhone,
                        Notes,
                        AttachFile}, this.CreateTicketAttachWithNotesOperationCompleted, userState);
        }
        
        private void OnCreateTicketAttachWithNotesOperationCompleted(object arg) {
            if ((this.CreateTicketAttachWithNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTicketAttachWithNotesCompleted(this, new CreateTicketAttachWithNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/CreateTicketWithNotes", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateTicketWithNotes(int SubcategoryID, string CustomerCode, string Description, string ResolutionGroupID, string ContactName, string ContactEmail, string ContactPhone, string Notes) {
            object[] results = this.Invoke("CreateTicketWithNotes", new object[] {
                        SubcategoryID,
                        CustomerCode,
                        Description,
                        ResolutionGroupID,
                        ContactName,
                        ContactEmail,
                        ContactPhone,
                        Notes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTicketWithNotesAsync(int SubcategoryID, string CustomerCode, string Description, string ResolutionGroupID, string ContactName, string ContactEmail, string ContactPhone, string Notes) {
            this.CreateTicketWithNotesAsync(SubcategoryID, CustomerCode, Description, ResolutionGroupID, ContactName, ContactEmail, ContactPhone, Notes, null);
        }
        
        /// <remarks/>
        public void CreateTicketWithNotesAsync(int SubcategoryID, string CustomerCode, string Description, string ResolutionGroupID, string ContactName, string ContactEmail, string ContactPhone, string Notes, object userState) {
            if ((this.CreateTicketWithNotesOperationCompleted == null)) {
                this.CreateTicketWithNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTicketWithNotesOperationCompleted);
            }
            this.InvokeAsync("CreateTicketWithNotes", new object[] {
                        SubcategoryID,
                        CustomerCode,
                        Description,
                        ResolutionGroupID,
                        ContactName,
                        ContactEmail,
                        ContactPhone,
                        Notes}, this.CreateTicketWithNotesOperationCompleted, userState);
        }
        
        private void OnCreateTicketWithNotesOperationCompleted(object arg) {
            if ((this.CreateTicketWithNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTicketWithNotesCompleted(this, new CreateTicketWithNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/CreateTicketAttach", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateTicketAttach(int SubcategoryID, string CustomerCode, string Description, string ResolutionGroupID, string ContactName, string ContactEmail, string ContactPhone, CallFile AttachFile) {
            object[] results = this.Invoke("CreateTicketAttach", new object[] {
                        SubcategoryID,
                        CustomerCode,
                        Description,
                        ResolutionGroupID,
                        ContactName,
                        ContactEmail,
                        ContactPhone,
                        AttachFile});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTicketAttachAsync(int SubcategoryID, string CustomerCode, string Description, string ResolutionGroupID, string ContactName, string ContactEmail, string ContactPhone, CallFile AttachFile) {
            this.CreateTicketAttachAsync(SubcategoryID, CustomerCode, Description, ResolutionGroupID, ContactName, ContactEmail, ContactPhone, AttachFile, null);
        }
        
        /// <remarks/>
        public void CreateTicketAttachAsync(int SubcategoryID, string CustomerCode, string Description, string ResolutionGroupID, string ContactName, string ContactEmail, string ContactPhone, CallFile AttachFile, object userState) {
            if ((this.CreateTicketAttachOperationCompleted == null)) {
                this.CreateTicketAttachOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTicketAttachOperationCompleted);
            }
            this.InvokeAsync("CreateTicketAttach", new object[] {
                        SubcategoryID,
                        CustomerCode,
                        Description,
                        ResolutionGroupID,
                        ContactName,
                        ContactEmail,
                        ContactPhone,
                        AttachFile}, this.CreateTicketAttachOperationCompleted, userState);
        }
        
        private void OnCreateTicketAttachOperationCompleted(object arg) {
            if ((this.CreateTicketAttachCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTicketAttachCompleted(this, new CreateTicketAttachCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/CreateTicketAttachWithMessage", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateTicketAttachWithMessage(int SubcategoryID, string CustomerCode, string Description, string ResolutionGroupID, string ContactName, string ContactEmail, string ContactPhone, CallFile AttachFile) {
            object[] results = this.Invoke("CreateTicketAttachWithMessage", new object[] {
                        SubcategoryID,
                        CustomerCode,
                        Description,
                        ResolutionGroupID,
                        ContactName,
                        ContactEmail,
                        ContactPhone,
                        AttachFile});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTicketAttachWithMessageAsync(int SubcategoryID, string CustomerCode, string Description, string ResolutionGroupID, string ContactName, string ContactEmail, string ContactPhone, CallFile AttachFile) {
            this.CreateTicketAttachWithMessageAsync(SubcategoryID, CustomerCode, Description, ResolutionGroupID, ContactName, ContactEmail, ContactPhone, AttachFile, null);
        }
        
        /// <remarks/>
        public void CreateTicketAttachWithMessageAsync(int SubcategoryID, string CustomerCode, string Description, string ResolutionGroupID, string ContactName, string ContactEmail, string ContactPhone, CallFile AttachFile, object userState) {
            if ((this.CreateTicketAttachWithMessageOperationCompleted == null)) {
                this.CreateTicketAttachWithMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTicketAttachWithMessageOperationCompleted);
            }
            this.InvokeAsync("CreateTicketAttachWithMessage", new object[] {
                        SubcategoryID,
                        CustomerCode,
                        Description,
                        ResolutionGroupID,
                        ContactName,
                        ContactEmail,
                        ContactPhone,
                        AttachFile}, this.CreateTicketAttachWithMessageOperationCompleted, userState);
        }
        
        private void OnCreateTicketAttachWithMessageOperationCompleted(object arg) {
            if ((this.CreateTicketAttachWithMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTicketAttachWithMessageCompleted(this, new CreateTicketAttachWithMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/CreateTicketPricingZone", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateTicketPricingZone(int SubcategoryID, string CustomerCode, string Description, string ResolutionGroupID, string ZonePricing, CallFile File) {
            object[] results = this.Invoke("CreateTicketPricingZone", new object[] {
                        SubcategoryID,
                        CustomerCode,
                        Description,
                        ResolutionGroupID,
                        ZonePricing,
                        File});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTicketPricingZoneAsync(int SubcategoryID, string CustomerCode, string Description, string ResolutionGroupID, string ZonePricing, CallFile File) {
            this.CreateTicketPricingZoneAsync(SubcategoryID, CustomerCode, Description, ResolutionGroupID, ZonePricing, File, null);
        }
        
        /// <remarks/>
        public void CreateTicketPricingZoneAsync(int SubcategoryID, string CustomerCode, string Description, string ResolutionGroupID, string ZonePricing, CallFile File, object userState) {
            if ((this.CreateTicketPricingZoneOperationCompleted == null)) {
                this.CreateTicketPricingZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTicketPricingZoneOperationCompleted);
            }
            this.InvokeAsync("CreateTicketPricingZone", new object[] {
                        SubcategoryID,
                        CustomerCode,
                        Description,
                        ResolutionGroupID,
                        ZonePricing,
                        File}, this.CreateTicketPricingZoneOperationCompleted, userState);
        }
        
        private void OnCreateTicketPricingZoneOperationCompleted(object arg) {
            if ((this.CreateTicketPricingZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTicketPricingZoneCompleted(this, new CreateTicketPricingZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/CreateTicketPricingZoneWithNotes", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateTicketPricingZoneWithNotes(int SubcategoryID, string CustomerCode, string Description, string ResolutionGroupID, string ZonePricing, string Notes, CallFile File) {
            object[] results = this.Invoke("CreateTicketPricingZoneWithNotes", new object[] {
                        SubcategoryID,
                        CustomerCode,
                        Description,
                        ResolutionGroupID,
                        ZonePricing,
                        Notes,
                        File});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTicketPricingZoneWithNotesAsync(int SubcategoryID, string CustomerCode, string Description, string ResolutionGroupID, string ZonePricing, string Notes, CallFile File) {
            this.CreateTicketPricingZoneWithNotesAsync(SubcategoryID, CustomerCode, Description, ResolutionGroupID, ZonePricing, Notes, File, null);
        }
        
        /// <remarks/>
        public void CreateTicketPricingZoneWithNotesAsync(int SubcategoryID, string CustomerCode, string Description, string ResolutionGroupID, string ZonePricing, string Notes, CallFile File, object userState) {
            if ((this.CreateTicketPricingZoneWithNotesOperationCompleted == null)) {
                this.CreateTicketPricingZoneWithNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTicketPricingZoneWithNotesOperationCompleted);
            }
            this.InvokeAsync("CreateTicketPricingZoneWithNotes", new object[] {
                        SubcategoryID,
                        CustomerCode,
                        Description,
                        ResolutionGroupID,
                        ZonePricing,
                        Notes,
                        File}, this.CreateTicketPricingZoneWithNotesOperationCompleted, userState);
        }
        
        private void OnCreateTicketPricingZoneWithNotesOperationCompleted(object arg) {
            if ((this.CreateTicketPricingZoneWithNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTicketPricingZoneWithNotesCompleted(this, new CreateTicketPricingZoneWithNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/UpdateClientContactInformation", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateClientContactInformation(string CustomerCode, string PersonContact, string Telephone, string Fax, string Email) {
            object[] results = this.Invoke("UpdateClientContactInformation", new object[] {
                        CustomerCode,
                        PersonContact,
                        Telephone,
                        Fax,
                        Email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateClientContactInformationAsync(string CustomerCode, string PersonContact, string Telephone, string Fax, string Email) {
            this.UpdateClientContactInformationAsync(CustomerCode, PersonContact, Telephone, Fax, Email, null);
        }
        
        /// <remarks/>
        public void UpdateClientContactInformationAsync(string CustomerCode, string PersonContact, string Telephone, string Fax, string Email, object userState) {
            if ((this.UpdateClientContactInformationOperationCompleted == null)) {
                this.UpdateClientContactInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateClientContactInformationOperationCompleted);
            }
            this.InvokeAsync("UpdateClientContactInformation", new object[] {
                        CustomerCode,
                        PersonContact,
                        Telephone,
                        Fax,
                        Email}, this.UpdateClientContactInformationOperationCompleted, userState);
        }
        
        private void OnUpdateClientContactInformationOperationCompleted(object arg) {
            if ((this.UpdateClientContactInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateClientContactInformationCompleted(this, new UpdateClientContactInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/UpdateClientNote", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateClientNote(string CustomerCode, string Note) {
            object[] results = this.Invoke("UpdateClientNote", new object[] {
                        CustomerCode,
                        Note});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateClientNoteAsync(string CustomerCode, string Note) {
            this.UpdateClientNoteAsync(CustomerCode, Note, null);
        }
        
        /// <remarks/>
        public void UpdateClientNoteAsync(string CustomerCode, string Note, object userState) {
            if ((this.UpdateClientNoteOperationCompleted == null)) {
                this.UpdateClientNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateClientNoteOperationCompleted);
            }
            this.InvokeAsync("UpdateClientNote", new object[] {
                        CustomerCode,
                        Note}, this.UpdateClientNoteOperationCompleted, userState);
        }
        
        private void OnUpdateClientNoteOperationCompleted(object arg) {
            if ((this.UpdateClientNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateClientNoteCompleted(this, new UpdateClientNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/GetTicketReport", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CallReport[] GetTicketReport(string CustomerCode) {
            object[] results = this.Invoke("GetTicketReport", new object[] {
                        CustomerCode});
            return ((CallReport[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTicketReportAsync(string CustomerCode) {
            this.GetTicketReportAsync(CustomerCode, null);
        }
        
        /// <remarks/>
        public void GetTicketReportAsync(string CustomerCode, object userState) {
            if ((this.GetTicketReportOperationCompleted == null)) {
                this.GetTicketReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTicketReportOperationCompleted);
            }
            this.InvokeAsync("GetTicketReport", new object[] {
                        CustomerCode}, this.GetTicketReportOperationCompleted, userState);
        }
        
        private void OnGetTicketReportOperationCompleted(object arg) {
            if ((this.GetTicketReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTicketReportCompleted(this, new GetTicketReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/GetTicketByCustomer", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CallReport[] GetTicketByCustomer(string CustomerCode) {
            object[] results = this.Invoke("GetTicketByCustomer", new object[] {
                        CustomerCode});
            return ((CallReport[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTicketByCustomerAsync(string CustomerCode) {
            this.GetTicketByCustomerAsync(CustomerCode, null);
        }
        
        /// <remarks/>
        public void GetTicketByCustomerAsync(string CustomerCode, object userState) {
            if ((this.GetTicketByCustomerOperationCompleted == null)) {
                this.GetTicketByCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTicketByCustomerOperationCompleted);
            }
            this.InvokeAsync("GetTicketByCustomer", new object[] {
                        CustomerCode}, this.GetTicketByCustomerOperationCompleted, userState);
        }
        
        private void OnGetTicketByCustomerOperationCompleted(object arg) {
            if ((this.GetTicketByCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTicketByCustomerCompleted(this, new GetTicketByCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/GetTicketByNumber", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CallReport[] GetTicketByNumber(string[] ListTickets) {
            object[] results = this.Invoke("GetTicketByNumber", new object[] {
                        ListTickets});
            return ((CallReport[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTicketByNumberAsync(string[] ListTickets) {
            this.GetTicketByNumberAsync(ListTickets, null);
        }
        
        /// <remarks/>
        public void GetTicketByNumberAsync(string[] ListTickets, object userState) {
            if ((this.GetTicketByNumberOperationCompleted == null)) {
                this.GetTicketByNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTicketByNumberOperationCompleted);
            }
            this.InvokeAsync("GetTicketByNumber", new object[] {
                        ListTickets}, this.GetTicketByNumberOperationCompleted, userState);
        }
        
        private void OnGetTicketByNumberOperationCompleted(object arg) {
            if ((this.GetTicketByNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTicketByNumberCompleted(this, new GetTicketByNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/GetCustomerContact", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ClientContact[] GetCustomerContact(string CustomerCode) {
            object[] results = this.Invoke("GetCustomerContact", new object[] {
                        CustomerCode});
            return ((ClientContact[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerContactAsync(string CustomerCode) {
            this.GetCustomerContactAsync(CustomerCode, null);
        }
        
        /// <remarks/>
        public void GetCustomerContactAsync(string CustomerCode, object userState) {
            if ((this.GetCustomerContactOperationCompleted == null)) {
                this.GetCustomerContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerContactOperationCompleted);
            }
            this.InvokeAsync("GetCustomerContact", new object[] {
                        CustomerCode}, this.GetCustomerContactOperationCompleted, userState);
        }
        
        private void OnGetCustomerContactOperationCompleted(object arg) {
            if ((this.GetCustomerContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerContactCompleted(this, new GetCustomerContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/GetTicketStatus", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTicketStatus(string TicketNumber) {
            object[] results = this.Invoke("GetTicketStatus", new object[] {
                        TicketNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTicketStatusAsync(string TicketNumber) {
            this.GetTicketStatusAsync(TicketNumber, null);
        }
        
        /// <remarks/>
        public void GetTicketStatusAsync(string TicketNumber, object userState) {
            if ((this.GetTicketStatusOperationCompleted == null)) {
                this.GetTicketStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTicketStatusOperationCompleted);
            }
            this.InvokeAsync("GetTicketStatus", new object[] {
                        TicketNumber}, this.GetTicketStatusOperationCompleted, userState);
        }
        
        private void OnGetTicketStatusOperationCompleted(object arg) {
            if ((this.GetTicketStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTicketStatusCompleted(this, new GetTicketStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/CloseTicket", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CloseTicket(string TicketNumber, string Notes, string Attended) {
            object[] results = this.Invoke("CloseTicket", new object[] {
                        TicketNumber,
                        Notes,
                        Attended});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CloseTicketAsync(string TicketNumber, string Notes, string Attended) {
            this.CloseTicketAsync(TicketNumber, Notes, Attended, null);
        }
        
        /// <remarks/>
        public void CloseTicketAsync(string TicketNumber, string Notes, string Attended, object userState) {
            if ((this.CloseTicketOperationCompleted == null)) {
                this.CloseTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseTicketOperationCompleted);
            }
            this.InvokeAsync("CloseTicket", new object[] {
                        TicketNumber,
                        Notes,
                        Attended}, this.CloseTicketOperationCompleted, userState);
        }
        
        private void OnCloseTicketOperationCompleted(object arg) {
            if ((this.CloseTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseTicketCompleted(this, new CloseTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/CloseTicketByUser", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CloseTicketByUser(string TicketNumber, string Notes, string Attended, string userCode) {
            object[] results = this.Invoke("CloseTicketByUser", new object[] {
                        TicketNumber,
                        Notes,
                        Attended,
                        userCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CloseTicketByUserAsync(string TicketNumber, string Notes, string Attended, string userCode) {
            this.CloseTicketByUserAsync(TicketNumber, Notes, Attended, userCode, null);
        }
        
        /// <remarks/>
        public void CloseTicketByUserAsync(string TicketNumber, string Notes, string Attended, string userCode, object userState) {
            if ((this.CloseTicketByUserOperationCompleted == null)) {
                this.CloseTicketByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseTicketByUserOperationCompleted);
            }
            this.InvokeAsync("CloseTicketByUser", new object[] {
                        TicketNumber,
                        Notes,
                        Attended,
                        userCode}, this.CloseTicketByUserOperationCompleted, userState);
        }
        
        private void OnCloseTicketByUserOperationCompleted(object arg) {
            if ((this.CloseTicketByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseTicketByUserCompleted(this, new CloseTicketByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/GetSmsInformation", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SmsInformation GetSmsInformation(string[] idSubCategories, string customerCode) {
            object[] results = this.Invoke("GetSmsInformation", new object[] {
                        idSubCategories,
                        customerCode});
            return ((SmsInformation)(results[0]));
        }
        
        /// <remarks/>
        public void GetSmsInformationAsync(string[] idSubCategories, string customerCode) {
            this.GetSmsInformationAsync(idSubCategories, customerCode, null);
        }
        
        /// <remarks/>
        public void GetSmsInformationAsync(string[] idSubCategories, string customerCode, object userState) {
            if ((this.GetSmsInformationOperationCompleted == null)) {
                this.GetSmsInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSmsInformationOperationCompleted);
            }
            this.InvokeAsync("GetSmsInformation", new object[] {
                        idSubCategories,
                        customerCode}, this.GetSmsInformationOperationCompleted, userState);
        }
        
        private void OnGetSmsInformationOperationCompleted(object arg) {
            if ((this.GetSmsInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSmsInformationCompleted(this, new GetSmsInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/SetSmsInformation", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetSmsInformation(string customerCode, string smsPhone, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> allowReceiveSms) {
            this.Invoke("SetSmsInformation", new object[] {
                        customerCode,
                        smsPhone,
                        allowReceiveSms});
        }
        
        /// <remarks/>
        public void SetSmsInformationAsync(string customerCode, string smsPhone, System.Nullable<bool> allowReceiveSms) {
            this.SetSmsInformationAsync(customerCode, smsPhone, allowReceiveSms, null);
        }
        
        /// <remarks/>
        public void SetSmsInformationAsync(string customerCode, string smsPhone, System.Nullable<bool> allowReceiveSms, object userState) {
            if ((this.SetSmsInformationOperationCompleted == null)) {
                this.SetSmsInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetSmsInformationOperationCompleted);
            }
            this.InvokeAsync("SetSmsInformation", new object[] {
                        customerCode,
                        smsPhone,
                        allowReceiveSms}, this.SetSmsInformationOperationCompleted, userState);
        }
        
        private void OnSetSmsInformationOperationCompleted(object arg) {
            if ((this.SetSmsInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetSmsInformationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/GetTicketsSummary", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CallSummary[] GetTicketsSummary(System.DateTime dtIniFechamento, System.DateTime dtFimFechamento, int idSubcategoria, string ibmCliente) {
            object[] results = this.Invoke("GetTicketsSummary", new object[] {
                        dtIniFechamento,
                        dtFimFechamento,
                        idSubcategoria,
                        ibmCliente});
            return ((CallSummary[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTicketsSummaryAsync(System.DateTime dtIniFechamento, System.DateTime dtFimFechamento, int idSubcategoria, string ibmCliente) {
            this.GetTicketsSummaryAsync(dtIniFechamento, dtFimFechamento, idSubcategoria, ibmCliente, null);
        }
        
        /// <remarks/>
        public void GetTicketsSummaryAsync(System.DateTime dtIniFechamento, System.DateTime dtFimFechamento, int idSubcategoria, string ibmCliente, object userState) {
            if ((this.GetTicketsSummaryOperationCompleted == null)) {
                this.GetTicketsSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTicketsSummaryOperationCompleted);
            }
            this.InvokeAsync("GetTicketsSummary", new object[] {
                        dtIniFechamento,
                        dtFimFechamento,
                        idSubcategoria,
                        ibmCliente}, this.GetTicketsSummaryOperationCompleted, userState);
        }
        
        private void OnGetTicketsSummaryOperationCompleted(object arg) {
            if ((this.GetTicketsSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTicketsSummaryCompleted(this, new GetTicketsSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/ListOpenAppTickets", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CallSummary[] ListOpenAppTickets(string customerCode) {
            object[] results = this.Invoke("ListOpenAppTickets", new object[] {
                        customerCode});
            return ((CallSummary[])(results[0]));
        }
        
        /// <remarks/>
        public void ListOpenAppTicketsAsync(string customerCode) {
            this.ListOpenAppTicketsAsync(customerCode, null);
        }
        
        /// <remarks/>
        public void ListOpenAppTicketsAsync(string customerCode, object userState) {
            if ((this.ListOpenAppTicketsOperationCompleted == null)) {
                this.ListOpenAppTicketsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOpenAppTicketsOperationCompleted);
            }
            this.InvokeAsync("ListOpenAppTickets", new object[] {
                        customerCode}, this.ListOpenAppTicketsOperationCompleted, userState);
        }
        
        private void OnListOpenAppTicketsOperationCompleted(object arg) {
            if ((this.ListOpenAppTicketsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListOpenAppTicketsCompleted(this, new ListOpenAppTicketsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/CreateChatRequest", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateChatRequest(string callId, string uuid, string message) {
            object[] results = this.Invoke("CreateChatRequest", new object[] {
                        callId,
                        uuid,
                        message});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateChatRequestAsync(string callId, string uuid, string message) {
            this.CreateChatRequestAsync(callId, uuid, message, null);
        }
        
        /// <remarks/>
        public void CreateChatRequestAsync(string callId, string uuid, string message, object userState) {
            if ((this.CreateChatRequestOperationCompleted == null)) {
                this.CreateChatRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateChatRequestOperationCompleted);
            }
            this.InvokeAsync("CreateChatRequest", new object[] {
                        callId,
                        uuid,
                        message}, this.CreateChatRequestOperationCompleted, userState);
        }
        
        private void OnCreateChatRequestOperationCompleted(object arg) {
            if ((this.CreateChatRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateChatRequestCompleted(this, new CreateChatRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/ListChat", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ChatDto[] ListChat(string callId) {
            object[] results = this.Invoke("ListChat", new object[] {
                        callId});
            return ((ChatDto[])(results[0]));
        }
        
        /// <remarks/>
        public void ListChatAsync(string callId) {
            this.ListChatAsync(callId, null);
        }
        
        /// <remarks/>
        public void ListChatAsync(string callId, object userState) {
            if ((this.ListChatOperationCompleted == null)) {
                this.ListChatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListChatOperationCompleted);
            }
            this.InvokeAsync("ListChat", new object[] {
                        callId}, this.ListChatOperationCompleted, userState);
        }
        
        private void OnListChatOperationCompleted(object arg) {
            if ((this.ListChatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListChatCompleted(this, new ListChatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/ListarTopTenRecentes", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CallForApp[] ListarTopTenRecentes(string clientCode) {
            object[] results = this.Invoke("ListarTopTenRecentes", new object[] {
                        clientCode});
            return ((CallForApp[])(results[0]));
        }
        
        /// <remarks/>
        public void ListarTopTenRecentesAsync(string clientCode) {
            this.ListarTopTenRecentesAsync(clientCode, null);
        }
        
        /// <remarks/>
        public void ListarTopTenRecentesAsync(string clientCode, object userState) {
            if ((this.ListarTopTenRecentesOperationCompleted == null)) {
                this.ListarTopTenRecentesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListarTopTenRecentesOperationCompleted);
            }
            this.InvokeAsync("ListarTopTenRecentes", new object[] {
                        clientCode}, this.ListarTopTenRecentesOperationCompleted, userState);
        }
        
        private void OnListarTopTenRecentesOperationCompleted(object arg) {
            if ((this.ListarTopTenRecentesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListarTopTenRecentesCompleted(this, new ListarTopTenRecentesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/ListarConsultaApp", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CallSummaryForApp[] ListarConsultaApp(string clientCode, int numeroDeDias) {
            object[] results = this.Invoke("ListarConsultaApp", new object[] {
                        clientCode,
                        numeroDeDias});
            return ((CallSummaryForApp[])(results[0]));
        }
        
        /// <remarks/>
        public void ListarConsultaAppAsync(string clientCode, int numeroDeDias) {
            this.ListarConsultaAppAsync(clientCode, numeroDeDias, null);
        }
        
        /// <remarks/>
        public void ListarConsultaAppAsync(string clientCode, int numeroDeDias, object userState) {
            if ((this.ListarConsultaAppOperationCompleted == null)) {
                this.ListarConsultaAppOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListarConsultaAppOperationCompleted);
            }
            this.InvokeAsync("ListarConsultaApp", new object[] {
                        clientCode,
                        numeroDeDias}, this.ListarConsultaAppOperationCompleted, userState);
        }
        
        private void OnListarConsultaAppOperationCompleted(object arg) {
            if ((this.ListarConsultaAppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListarConsultaAppCompleted(this, new ListarConsultaAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/ListarConsultaAppCondicional", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CallSummaryForApp[] ListarConsultaAppCondicional(string clientCode, int numeroDeDias, bool closed) {
            object[] results = this.Invoke("ListarConsultaAppCondicional", new object[] {
                        clientCode,
                        numeroDeDias,
                        closed});
            return ((CallSummaryForApp[])(results[0]));
        }
        
        /// <remarks/>
        public void ListarConsultaAppCondicionalAsync(string clientCode, int numeroDeDias, bool closed) {
            this.ListarConsultaAppCondicionalAsync(clientCode, numeroDeDias, closed, null);
        }
        
        /// <remarks/>
        public void ListarConsultaAppCondicionalAsync(string clientCode, int numeroDeDias, bool closed, object userState) {
            if ((this.ListarConsultaAppCondicionalOperationCompleted == null)) {
                this.ListarConsultaAppCondicionalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListarConsultaAppCondicionalOperationCompleted);
            }
            this.InvokeAsync("ListarConsultaAppCondicional", new object[] {
                        clientCode,
                        numeroDeDias,
                        closed}, this.ListarConsultaAppCondicionalOperationCompleted, userState);
        }
        
        private void OnListarConsultaAppCondicionalOperationCompleted(object arg) {
            if ((this.ListarConsultaAppCondicionalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListarConsultaAppCondicionalCompleted(this, new ListarConsultaAppCondicionalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/CsfacilSendChatMessage", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ChatCSfacilDto CsfacilSendChatMessage(int SubCategoryId, int ResolutionWorkGroupId, string CallDescription, string ChatMessage, string Cpf) {
            object[] results = this.Invoke("CsfacilSendChatMessage", new object[] {
                        SubCategoryId,
                        ResolutionWorkGroupId,
                        CallDescription,
                        ChatMessage,
                        Cpf});
            return ((ChatCSfacilDto)(results[0]));
        }
        
        /// <remarks/>
        public void CsfacilSendChatMessageAsync(int SubCategoryId, int ResolutionWorkGroupId, string CallDescription, string ChatMessage, string Cpf) {
            this.CsfacilSendChatMessageAsync(SubCategoryId, ResolutionWorkGroupId, CallDescription, ChatMessage, Cpf, null);
        }
        
        /// <remarks/>
        public void CsfacilSendChatMessageAsync(int SubCategoryId, int ResolutionWorkGroupId, string CallDescription, string ChatMessage, string Cpf, object userState) {
            if ((this.CsfacilSendChatMessageOperationCompleted == null)) {
                this.CsfacilSendChatMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCsfacilSendChatMessageOperationCompleted);
            }
            this.InvokeAsync("CsfacilSendChatMessage", new object[] {
                        SubCategoryId,
                        ResolutionWorkGroupId,
                        CallDescription,
                        ChatMessage,
                        Cpf}, this.CsfacilSendChatMessageOperationCompleted, userState);
        }
        
        private void OnCsfacilSendChatMessageOperationCompleted(object arg) {
            if ((this.CsfacilSendChatMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CsfacilSendChatMessageCompleted(this, new CsfacilSendChatMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/CsfacilListChatMessage", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ChatCSfacilDto[] CsfacilListChatMessage(string cpf, int workgroup, int subcategrory, int tamanhoPagina, int bottomid, int topId) {
            object[] results = this.Invoke("CsfacilListChatMessage", new object[] {
                        cpf,
                        workgroup,
                        subcategrory,
                        tamanhoPagina,
                        bottomid,
                        topId});
            return ((ChatCSfacilDto[])(results[0]));
        }
        
        /// <remarks/>
        public void CsfacilListChatMessageAsync(string cpf, int workgroup, int subcategrory, int tamanhoPagina, int bottomid, int topId) {
            this.CsfacilListChatMessageAsync(cpf, workgroup, subcategrory, tamanhoPagina, bottomid, topId, null);
        }
        
        /// <remarks/>
        public void CsfacilListChatMessageAsync(string cpf, int workgroup, int subcategrory, int tamanhoPagina, int bottomid, int topId, object userState) {
            if ((this.CsfacilListChatMessageOperationCompleted == null)) {
                this.CsfacilListChatMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCsfacilListChatMessageOperationCompleted);
            }
            this.InvokeAsync("CsfacilListChatMessage", new object[] {
                        cpf,
                        workgroup,
                        subcategrory,
                        tamanhoPagina,
                        bottomid,
                        topId}, this.CsfacilListChatMessageOperationCompleted, userState);
        }
        
        private void OnCsfacilListChatMessageOperationCompleted(object arg) {
            if ((this.CsfacilListChatMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CsfacilListChatMessageCompleted(this, new CsfacilListChatMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyquerywebservice.cosan.com.br/CsfacilCountChatMessage", RequestNamespace="http://easyquerywebservice.cosan.com.br/", ResponseNamespace="http://easyquerywebservice.cosan.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CsfacilCountChatMessage(string cpf, int workgroup, int subcategrory, int idInicial) {
            object[] results = this.Invoke("CsfacilCountChatMessage", new object[] {
                        cpf,
                        workgroup,
                        subcategrory,
                        idInicial});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CsfacilCountChatMessageAsync(string cpf, int workgroup, int subcategrory, int idInicial) {
            this.CsfacilCountChatMessageAsync(cpf, workgroup, subcategrory, idInicial, null);
        }
        
        /// <remarks/>
        public void CsfacilCountChatMessageAsync(string cpf, int workgroup, int subcategrory, int idInicial, object userState) {
            if ((this.CsfacilCountChatMessageOperationCompleted == null)) {
                this.CsfacilCountChatMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCsfacilCountChatMessageOperationCompleted);
            }
            this.InvokeAsync("CsfacilCountChatMessage", new object[] {
                        cpf,
                        workgroup,
                        subcategrory,
                        idInicial}, this.CsfacilCountChatMessageOperationCompleted, userState);
        }
        
        private void OnCsfacilCountChatMessageOperationCompleted(object arg) {
            if ((this.CsfacilCountChatMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CsfacilCountChatMessageCompleted(this, new CsfacilCountChatMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://easyquerywebservice.cosan.com.br/", IsNullable=false)]
    public partial class Authenticator : System.Web.Services.Protocols.SoapHeader {
        
        private string usernameField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class ChatCSfacilDto {
        
        private int idField;
        
        private string directionField;
        
        private string messageField;
        
        private System.Nullable<System.DateTime> messageDateField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> MessageDate {
            get {
                return this.messageDateField;
            }
            set {
                this.messageDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class CallSummaryForApp {
        
        private string callIdField;
        
        private System.Nullable<System.DateTime> dtCreatedField;
        
        private int subcategoryIdField;
        
        private string subcategoryDescriptionField;
        
        private System.Nullable<bool> closedField;
        
        private System.Nullable<bool> attendedField;
        
        private System.Nullable<bool> chatLockedField;
        
        private string lastMessageField;
        
        private bool hasChatField;
        
        /// <remarks/>
        public string CallId {
            get {
                return this.callIdField;
            }
            set {
                this.callIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DtCreated {
            get {
                return this.dtCreatedField;
            }
            set {
                this.dtCreatedField = value;
            }
        }
        
        /// <remarks/>
        public int SubcategoryId {
            get {
                return this.subcategoryIdField;
            }
            set {
                this.subcategoryIdField = value;
            }
        }
        
        /// <remarks/>
        public string SubcategoryDescription {
            get {
                return this.subcategoryDescriptionField;
            }
            set {
                this.subcategoryDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Closed {
            get {
                return this.closedField;
            }
            set {
                this.closedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Attended {
            get {
                return this.attendedField;
            }
            set {
                this.attendedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> ChatLocked {
            get {
                return this.chatLockedField;
            }
            set {
                this.chatLockedField = value;
            }
        }
        
        /// <remarks/>
        public string LastMessage {
            get {
                return this.lastMessageField;
            }
            set {
                this.lastMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool HasChat {
            get {
                return this.hasChatField;
            }
            set {
                this.hasChatField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class CallForApp {
        
        private string callIdField;
        
        private int subcategoryIdField;
        
        private string subcategoryDescriptionField;
        
        /// <remarks/>
        public string CallId {
            get {
                return this.callIdField;
            }
            set {
                this.callIdField = value;
            }
        }
        
        /// <remarks/>
        public int SubcategoryId {
            get {
                return this.subcategoryIdField;
            }
            set {
                this.subcategoryIdField = value;
            }
        }
        
        /// <remarks/>
        public string SubcategoryDescription {
            get {
                return this.subcategoryDescriptionField;
            }
            set {
                this.subcategoryDescriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class ChatDto {
        
        private string customerIdField;
        
        private string directionField;
        
        private string messageField;
        
        private System.Nullable<System.DateTime> messageDateField;
        
        /// <remarks/>
        public string CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
            }
        }
        
        /// <remarks/>
        public string Direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> MessageDate {
            get {
                return this.messageDateField;
            }
            set {
                this.messageDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class CallSummary {
        
        private string ticketNumberField;
        
        private string descriptionField;
        
        private string statusField;
        
        private string attendedField;
        
        private string clientIBMField;
        
        /// <remarks/>
        public string TicketNumber {
            get {
                return this.ticketNumberField;
            }
            set {
                this.ticketNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Attended {
            get {
                return this.attendedField;
            }
            set {
                this.attendedField = value;
            }
        }
        
        /// <remarks/>
        public string ClientIBM {
            get {
                return this.clientIBMField;
            }
            set {
                this.clientIBMField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class SmsInformation {
        
        private string smsPhoneField;
        
        private System.Nullable<bool> allowReceiveSmsField;
        
        private string[] listSmsOnCloseNotAttendedField;
        
        /// <remarks/>
        public string SmsPhone {
            get {
                return this.smsPhoneField;
            }
            set {
                this.smsPhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> AllowReceiveSms {
            get {
                return this.allowReceiveSmsField;
            }
            set {
                this.allowReceiveSmsField = value;
            }
        }
        
        /// <remarks/>
        public string[] ListSmsOnCloseNotAttended {
            get {
                return this.listSmsOnCloseNotAttendedField;
            }
            set {
                this.listSmsOnCloseNotAttendedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class ClientContact {
        
        private int idField;
        
        private string nameField;
        
        private string phoneField;
        
        private string faxField;
        
        private string emailField;
        
        private string iBMField;
        
        private string sourceField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string IBM {
            get {
                return this.iBMField;
            }
            set {
                this.iBMField = value;
            }
        }
        
        /// <remarks/>
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class CallReport {
        
        private string ticketNumberField;
        
        private string descriptionField;
        
        private string statusField;
        
        private string userCreatedField;
        
        private string userClosedField;
        
        private string attendedField;
        
        private string subcategoryField;
        
        private string lastNotesField;
        
        private int subcategoryIdField;
        
        private System.DateTime createdField;
        
        private System.Nullable<System.DateTime> expiresField;
        
        private System.Nullable<System.DateTime> closedField;
        
        /// <remarks/>
        public string TicketNumber {
            get {
                return this.ticketNumberField;
            }
            set {
                this.ticketNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string UserCreated {
            get {
                return this.userCreatedField;
            }
            set {
                this.userCreatedField = value;
            }
        }
        
        /// <remarks/>
        public string UserClosed {
            get {
                return this.userClosedField;
            }
            set {
                this.userClosedField = value;
            }
        }
        
        /// <remarks/>
        public string Attended {
            get {
                return this.attendedField;
            }
            set {
                this.attendedField = value;
            }
        }
        
        /// <remarks/>
        public string Subcategory {
            get {
                return this.subcategoryField;
            }
            set {
                this.subcategoryField = value;
            }
        }
        
        /// <remarks/>
        public string LastNotes {
            get {
                return this.lastNotesField;
            }
            set {
                this.lastNotesField = value;
            }
        }
        
        /// <remarks/>
        public int SubcategoryId {
            get {
                return this.subcategoryIdField;
            }
            set {
                this.subcategoryIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Expires {
            get {
                return this.expiresField;
            }
            set {
                this.expiresField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Closed {
            get {
                return this.closedField;
            }
            set {
                this.closedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SqlElement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PricingZone))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProblemArea))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Problem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Criticity))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Area))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Category))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SubCategory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Status))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContactMood))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContactForm))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GT))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Users))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Satisfaction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Contact))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SLA))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ClientType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Client))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Protocol))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Call))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CallFile))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public abstract partial class NHEntity {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PricingZone))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProblemArea))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Problem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Criticity))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Area))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Category))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SubCategory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Status))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContactMood))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContactForm))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GT))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Users))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Satisfaction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Contact))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SLA))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ClientType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Client))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Protocol))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Call))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CallFile))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public abstract partial class SqlElement : NHEntity {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class PricingZone : SqlElement {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class ProblemArea : SqlElement {
        
        private int idField;
        
        private string nameField;
        
        private bool activeField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class Problem : SqlElement {
        
        private int idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private bool activeField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class Criticity : SqlElement {
        
        private int idField;
        
        private string nameField;
        
        private bool activeField;
        
        private int sLADecreaseField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public int SLADecrease {
            get {
                return this.sLADecreaseField;
            }
            set {
                this.sLADecreaseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class Area : SqlElement {
        
        private int idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private bool activeField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class WorkGroup : SqlElement {
        
        private int idField;
        
        private Area areaField;
        
        private string nameField;
        
        private string descriptionField;
        
        private bool activeField;
        
        private bool sendEmailField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public Area Area {
            get {
                return this.areaField;
            }
            set {
                this.areaField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public bool SendEmail {
            get {
                return this.sendEmailField;
            }
            set {
                this.sendEmailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class Category : SqlElement {
        
        private int idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private bool activeField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class SubCategory : SqlElement {
        
        private int idField;
        
        private Category categoryField;
        
        private SLA sLAField;
        
        private WorkGroup workGroupField;
        
        private string nameField;
        
        private string descriptionField;
        
        private string helpField;
        
        private bool activeField;
        
        private string suggestionGroupField;
        
        private bool smsOnCloseNotAttendedField;
        
        private string msgSmsOnCloseNotAttendedField;
        
        private bool smsOnOpenField;
        
        private string msgSmsOnOpenField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public Category Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public SLA SLA {
            get {
                return this.sLAField;
            }
            set {
                this.sLAField = value;
            }
        }
        
        /// <remarks/>
        public WorkGroup WorkGroup {
            get {
                return this.workGroupField;
            }
            set {
                this.workGroupField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Help {
            get {
                return this.helpField;
            }
            set {
                this.helpField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public string SuggestionGroup {
            get {
                return this.suggestionGroupField;
            }
            set {
                this.suggestionGroupField = value;
            }
        }
        
        /// <remarks/>
        public bool SmsOnCloseNotAttended {
            get {
                return this.smsOnCloseNotAttendedField;
            }
            set {
                this.smsOnCloseNotAttendedField = value;
            }
        }
        
        /// <remarks/>
        public string MsgSmsOnCloseNotAttended {
            get {
                return this.msgSmsOnCloseNotAttendedField;
            }
            set {
                this.msgSmsOnCloseNotAttendedField = value;
            }
        }
        
        /// <remarks/>
        public bool SmsOnOpen {
            get {
                return this.smsOnOpenField;
            }
            set {
                this.smsOnOpenField = value;
            }
        }
        
        /// <remarks/>
        public string MsgSmsOnOpen {
            get {
                return this.msgSmsOnOpenField;
            }
            set {
                this.msgSmsOnOpenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class SLA : SqlElement {
        
        private int idField;
        
        private string nameField;
        
        private System.Nullable<float> totalTimeField;
        
        private System.Nullable<System.DateTime> startTimeField;
        
        private System.Nullable<System.DateTime> endTimeField;
        
        private System.Nullable<System.DateTime> saturdayStartField;
        
        private System.Nullable<System.DateTime> saturdayEndField;
        
        private System.Nullable<System.DateTime> sundayStartField;
        
        private System.Nullable<System.DateTime> sundayEndField;
        
        private System.Nullable<System.DateTime> holidayStartField;
        
        private System.Nullable<System.DateTime> holidayEndField;
        
        private string descriptionField;
        
        private bool activeField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> TotalTime {
            get {
                return this.totalTimeField;
            }
            set {
                this.totalTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SaturdayStart {
            get {
                return this.saturdayStartField;
            }
            set {
                this.saturdayStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SaturdayEnd {
            get {
                return this.saturdayEndField;
            }
            set {
                this.saturdayEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SundayStart {
            get {
                return this.sundayStartField;
            }
            set {
                this.sundayStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SundayEnd {
            get {
                return this.sundayEndField;
            }
            set {
                this.sundayEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> HolidayStart {
            get {
                return this.holidayStartField;
            }
            set {
                this.holidayStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> HolidayEnd {
            get {
                return this.holidayEndField;
            }
            set {
                this.holidayEndField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class Status : SqlElement {
        
        private int idField;
        
        private string codeField;
        
        private string nameField;
        
        private string descriptionField;
        
        private bool activeField;
        
        private System.Nullable<bool> pauseSLAField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> PauseSLA {
            get {
                return this.pauseSLAField;
            }
            set {
                this.pauseSLAField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class ContactMood : SqlElement {
        
        private int idField;
        
        private string nameField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class ContactForm : SqlElement {
        
        private int idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private bool activeField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class GT : SqlElement {
        
        private int idField;
        
        private string registrationField;
        
        private string nameField;
        
        private string emailField;
        
        private bool activeField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Registration {
            get {
                return this.registrationField;
            }
            set {
                this.registrationField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class Users : SqlElement {
        
        private string idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private bool activeField;
        
        private string eMailAddressField;
        
        private string passwordField;
        
        private int userTypeField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public string EMailAddress {
            get {
                return this.eMailAddressField;
            }
            set {
                this.eMailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public int UserType {
            get {
                return this.userTypeField;
            }
            set {
                this.userTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class Satisfaction : SqlElement {
        
        private int idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private bool activeField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class Contact : SqlElement {
        
        private int idField;
        
        private Client clientField;
        
        private string codeField;
        
        private string nameField;
        
        private string phoneField;
        
        private string faxField;
        
        private string emailField;
        
        private System.Nullable<System.DateTime> deletedField;
        
        private bool activeField;
        
        private string sourceField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public Client Client {
            get {
                return this.clientField;
            }
            set {
                this.clientField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class Client : SqlElement {
        
        private int idField;
        
        private string personTypeField;
        
        private string codeField;
        
        private string name1Field;
        
        private string name2Field;
        
        private string addressField;
        
        private string districtField;
        
        private string zipCodeField;
        
        private string complementField;
        
        private string cityField;
        
        private string stateField;
        
        private string countryField;
        
        private string countryDocField;
        
        private string stateDocField;
        
        private string phoneField;
        
        private string phone2Field;
        
        private string mobilePhoneField;
        
        private string faxField;
        
        private string emailField;
        
        private char genderField;
        
        private System.Nullable<System.DateTime> birthdayField;
        
        private bool activeField;
        
        private bool allowModifyField;
        
        private string noteField;
        
        private string smsPhoneField;
        
        private System.Nullable<bool> allowReceiveSmsField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string PersonType {
            get {
                return this.personTypeField;
            }
            set {
                this.personTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Name1 {
            get {
                return this.name1Field;
            }
            set {
                this.name1Field = value;
            }
        }
        
        /// <remarks/>
        public string Name2 {
            get {
                return this.name2Field;
            }
            set {
                this.name2Field = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string District {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Complement {
            get {
                return this.complementField;
            }
            set {
                this.complementField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string CountryDoc {
            get {
                return this.countryDocField;
            }
            set {
                this.countryDocField = value;
            }
        }
        
        /// <remarks/>
        public string StateDoc {
            get {
                return this.stateDocField;
            }
            set {
                this.stateDocField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Phone2 {
            get {
                return this.phone2Field;
            }
            set {
                this.phone2Field = value;
            }
        }
        
        /// <remarks/>
        public string MobilePhone {
            get {
                return this.mobilePhoneField;
            }
            set {
                this.mobilePhoneField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public char Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Birthday {
            get {
                return this.birthdayField;
            }
            set {
                this.birthdayField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public bool AllowModify {
            get {
                return this.allowModifyField;
            }
            set {
                this.allowModifyField = value;
            }
        }
        
        /// <remarks/>
        public string note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public string SmsPhone {
            get {
                return this.smsPhoneField;
            }
            set {
                this.smsPhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> AllowReceiveSms {
            get {
                return this.allowReceiveSmsField;
            }
            set {
                this.allowReceiveSmsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class ClientType : SqlElement {
        
        private int idField;
        
        private string typeField;
        
        private string nameField;
        
        private string descriptionField;
        
        private bool activeField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class Protocol : SqlElement {
        
        private int idField;
        
        private Client clientField;
        
        private ClientType clientTypeField;
        
        private SLA sLAField;
        
        private Contact contactField;
        
        private Satisfaction satisfactionField;
        
        private Users usersField;
        
        private Users cUsersField;
        
        private GT gtField;
        
        private ContactForm contactFormField;
        
        private ContactMood contactMoodField;
        
        private System.Nullable<System.DateTime> expiresField;
        
        private System.Nullable<System.DateTime> createdField;
        
        private System.Nullable<System.DateTime> closedField;
        
        private bool statusField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public Client Client {
            get {
                return this.clientField;
            }
            set {
                this.clientField = value;
            }
        }
        
        /// <remarks/>
        public ClientType ClientType {
            get {
                return this.clientTypeField;
            }
            set {
                this.clientTypeField = value;
            }
        }
        
        /// <remarks/>
        public SLA SLA {
            get {
                return this.sLAField;
            }
            set {
                this.sLAField = value;
            }
        }
        
        /// <remarks/>
        public Contact Contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        public Satisfaction Satisfaction {
            get {
                return this.satisfactionField;
            }
            set {
                this.satisfactionField = value;
            }
        }
        
        /// <remarks/>
        public Users Users {
            get {
                return this.usersField;
            }
            set {
                this.usersField = value;
            }
        }
        
        /// <remarks/>
        public Users CUsers {
            get {
                return this.cUsersField;
            }
            set {
                this.cUsersField = value;
            }
        }
        
        /// <remarks/>
        public GT GT {
            get {
                return this.gtField;
            }
            set {
                this.gtField = value;
            }
        }
        
        /// <remarks/>
        public ContactForm ContactForm {
            get {
                return this.contactFormField;
            }
            set {
                this.contactFormField = value;
            }
        }
        
        /// <remarks/>
        public ContactMood ContactMood {
            get {
                return this.contactMoodField;
            }
            set {
                this.contactMoodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Expires {
            get {
                return this.expiresField;
            }
            set {
                this.expiresField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Closed {
            get {
                return this.closedField;
            }
            set {
                this.closedField = value;
            }
        }
        
        /// <remarks/>
        public bool Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class Call : SqlElement {
        
        private string idField;
        
        private Protocol protocolField;
        
        private Users usersField;
        
        private Status statusField;
        
        private SubCategory subCategoryField;
        
        private SLA sLAField;
        
        private Criticity criticityField;
        
        private Problem problemField;
        
        private ProblemArea problemAreaField;
        
        private bool foundedField;
        
        private System.DateTime createdField;
        
        private System.Nullable<System.DateTime> expiresField;
        
        private string descriptionField;
        
        private System.Nullable<System.DateTime> closedField;
        
        private Users cUsersField;
        
        private WorkGroup workGroupField;
        
        private int idNumField;
        
        private PricingZone pricingzoneField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public Protocol Protocol {
            get {
                return this.protocolField;
            }
            set {
                this.protocolField = value;
            }
        }
        
        /// <remarks/>
        public Users Users {
            get {
                return this.usersField;
            }
            set {
                this.usersField = value;
            }
        }
        
        /// <remarks/>
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public SubCategory SubCategory {
            get {
                return this.subCategoryField;
            }
            set {
                this.subCategoryField = value;
            }
        }
        
        /// <remarks/>
        public SLA SLA {
            get {
                return this.sLAField;
            }
            set {
                this.sLAField = value;
            }
        }
        
        /// <remarks/>
        public Criticity Criticity {
            get {
                return this.criticityField;
            }
            set {
                this.criticityField = value;
            }
        }
        
        /// <remarks/>
        public Problem Problem {
            get {
                return this.problemField;
            }
            set {
                this.problemField = value;
            }
        }
        
        /// <remarks/>
        public ProblemArea ProblemArea {
            get {
                return this.problemAreaField;
            }
            set {
                this.problemAreaField = value;
            }
        }
        
        /// <remarks/>
        public bool Founded {
            get {
                return this.foundedField;
            }
            set {
                this.foundedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Expires {
            get {
                return this.expiresField;
            }
            set {
                this.expiresField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Closed {
            get {
                return this.closedField;
            }
            set {
                this.closedField = value;
            }
        }
        
        /// <remarks/>
        public Users CUsers {
            get {
                return this.cUsersField;
            }
            set {
                this.cUsersField = value;
            }
        }
        
        /// <remarks/>
        public WorkGroup WorkGroup {
            get {
                return this.workGroupField;
            }
            set {
                this.workGroupField = value;
            }
        }
        
        /// <remarks/>
        public int IdNum {
            get {
                return this.idNumField;
            }
            set {
                this.idNumField = value;
            }
        }
        
        /// <remarks/>
        public PricingZone Pricingzone {
            get {
                return this.pricingzoneField;
            }
            set {
                this.pricingzoneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://easyquerywebservice.cosan.com.br/")]
    public partial class CallFile : SqlElement {
        
        private int idField;
        
        private Call callField;
        
        private Users usersField;
        
        private string nameField;
        
        private string extensionField;
        
        private System.Nullable<System.DateTime> createdField;
        
        private byte[] archiveField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public Call Call {
            get {
                return this.callField;
            }
            set {
                this.callField = value;
            }
        }
        
        /// <remarks/>
        public Users Users {
            get {
                return this.usersField;
            }
            set {
                this.usersField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Archive {
            get {
                return this.archiveField;
            }
            set {
                this.archiveField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancelTicketCompletedEventHandler(object sender, CancelTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DownloadTicketsCompletedEventHandler(object sender, DownloadTicketsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadTicketsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadTicketsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateTicketCompletedEventHandler(object sender, CreateTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateTicketCompleteCompletedEventHandler(object sender, CreateTicketCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTicketCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTicketCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateTicketByUnicadCompletedEventHandler(object sender, CreateTicketByUnicadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTicketByUnicadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTicketByUnicadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateTicketAttachWithNotesCompletedEventHandler(object sender, CreateTicketAttachWithNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTicketAttachWithNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTicketAttachWithNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateTicketWithNotesCompletedEventHandler(object sender, CreateTicketWithNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTicketWithNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTicketWithNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateTicketAttachCompletedEventHandler(object sender, CreateTicketAttachCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTicketAttachCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTicketAttachCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateTicketAttachWithMessageCompletedEventHandler(object sender, CreateTicketAttachWithMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTicketAttachWithMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTicketAttachWithMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateTicketPricingZoneCompletedEventHandler(object sender, CreateTicketPricingZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTicketPricingZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTicketPricingZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateTicketPricingZoneWithNotesCompletedEventHandler(object sender, CreateTicketPricingZoneWithNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTicketPricingZoneWithNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTicketPricingZoneWithNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateClientContactInformationCompletedEventHandler(object sender, UpdateClientContactInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateClientContactInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateClientContactInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateClientNoteCompletedEventHandler(object sender, UpdateClientNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateClientNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateClientNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTicketReportCompletedEventHandler(object sender, GetTicketReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTicketReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTicketReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallReport[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallReport[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTicketByCustomerCompletedEventHandler(object sender, GetTicketByCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTicketByCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTicketByCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallReport[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallReport[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTicketByNumberCompletedEventHandler(object sender, GetTicketByNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTicketByNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTicketByNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallReport[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallReport[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCustomerContactCompletedEventHandler(object sender, GetCustomerContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ClientContact[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClientContact[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTicketStatusCompletedEventHandler(object sender, GetTicketStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTicketStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTicketStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CloseTicketCompletedEventHandler(object sender, CloseTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CloseTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CloseTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CloseTicketByUserCompletedEventHandler(object sender, CloseTicketByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CloseTicketByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CloseTicketByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetSmsInformationCompletedEventHandler(object sender, GetSmsInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSmsInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSmsInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SmsInformation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmsInformation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SetSmsInformationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTicketsSummaryCompletedEventHandler(object sender, GetTicketsSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTicketsSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTicketsSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallSummary[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallSummary[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ListOpenAppTicketsCompletedEventHandler(object sender, ListOpenAppTicketsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListOpenAppTicketsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListOpenAppTicketsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallSummary[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallSummary[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateChatRequestCompletedEventHandler(object sender, CreateChatRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateChatRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateChatRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ListChatCompletedEventHandler(object sender, ListChatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListChatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListChatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChatDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChatDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ListarTopTenRecentesCompletedEventHandler(object sender, ListarTopTenRecentesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListarTopTenRecentesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListarTopTenRecentesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallForApp[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallForApp[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ListarConsultaAppCompletedEventHandler(object sender, ListarConsultaAppCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListarConsultaAppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListarConsultaAppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallSummaryForApp[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallSummaryForApp[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ListarConsultaAppCondicionalCompletedEventHandler(object sender, ListarConsultaAppCondicionalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListarConsultaAppCondicionalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListarConsultaAppCondicionalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallSummaryForApp[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallSummaryForApp[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CsfacilSendChatMessageCompletedEventHandler(object sender, CsfacilSendChatMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CsfacilSendChatMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CsfacilSendChatMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChatCSfacilDto Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChatCSfacilDto)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CsfacilListChatMessageCompletedEventHandler(object sender, CsfacilListChatMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CsfacilListChatMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CsfacilListChatMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChatCSfacilDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChatCSfacilDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CsfacilCountChatMessageCompletedEventHandler(object sender, CsfacilCountChatMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CsfacilCountChatMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CsfacilCountChatMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591